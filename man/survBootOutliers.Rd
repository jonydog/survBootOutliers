% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/survBootOutliers.R
\name{survBootOutliers}
\alias{survBootOutliers}
\title{Extract the most outlying observations following a criteria based on the bootstrapped concordance with parallel processing}
\usage{
survBootOutliers(surv.object, covariate.data, sod.method, B, B.N, max.outliers, parallel.param )
}
\arguments{
\item{surv.object}{An obect of type survival::Surv containing lifetimes and right-censoring status}

\item{covariate.data}{A data frame containing the data with covariate values for each individual}

\item{sod.method}{One of c("osd","bht","dbht","ld","martingale","deviance")}

\item{B}{The number of bootstrap samples generated only applicable for "bht" and "dbht" methods}

\item{B.N}{the number of observations in each bootstrap sample}

\item{max.outliers}{This parameter is only used for the "osd" method}

\item{parallel.param}{This parameter is of type BiocParallelParam, by default it has the value of SerialParam()}

}
\value{
For all methods, except for "bht" and "dbht", the output is a data.frame object containing the most outlying observations sorted by outlying score.
For the bootstrap based methods "bht" and "dbht" the output is a list with two elements: "outliers_set" and "histograms".
}
\description{
Extract the most outlying observations following a criteria based on the bootstrapped concordance with parallel processing
}
\examples{
## One Step Deletion "osd" method
whas <- get.whas100.dataset()
outliers_osd <- survBootOutliers( surv.object=Surv(time = whas$times,event = whas$status ) , covariate.data = whas[,2:5] , sod.method = "osd" , max.outliers = 10 )

## Bootstrap Hypothesis Test "bht" with 10 bootstrap samples, each with 100 individuals and running on 4 cores
whas <- get.whas100.dataset()
outliers_bht <- survBootOutliers( surv.object=Surv(time = whas$times,event = whas$status ) , covariate.data = whas[,2:5] , sod.method = "bht" , B = 10 , B.N = 100 , parallel.param = MulticoreParam() )

## Dual Bootstrap Hypothesis Test "dbht" with 10 bootstrap samples, each with 100 individuals and running on 4 cores
whas <- get.whas100.dataset()
outliers_dbht <- survBootOutliers( surv.object=Surv(time = whas$times,event = whas$status ) , covariate.data = whas[,2:5] , sod.method = "dbht" , B = 10 , B.N = 100 , parallel.param = SnowParam() )

## One Step Deletion "osd" with an amount of 10 for maximum outlier count
whas <- get.whas100.dataset()
outliers_osd <- survBootOutliers( surv.object=Surv(time = whas$times,event = whas$status ) , covariate.data = whas[,2:5] , sod.method = "osd" , max.outliers = 10)

## Likelihood displacement criterion for outlier ranking
whas <- get.whas100.dataset()
outliers_ld <- survBootOutliers( surv.object=Surv(time = whas$times,event = whas$status ) , covariate.data = whas[,2:5] , sod.method = "ld")

## Cox regression deviance residuals criterion for outlier ranking
whas <- get.whas100.dataset()
outliers_deviance <- survBootOutliers( surv.object=Surv(time = whas$times,event = whas$status ) , covariate.data = whas[,2:5] , sod.method = "deviance")

## Cox regression Martingale residuals criterion for outlier ranking
whas <- get.whas100.dataset()
outliers_martingale <- survBootOutliers( surv.object=Surv(time = whas$times,event = whas$status ) , covariate.data = whas[,2:5] , sod.method = "martingale")
}